I":	<p>I’ve previously written about my adventures in <a href="http://charlesmartin.com.au/blog/2013/3/26/finding-a-good-osc-library-for-ios">finding a good OSC library</a> to use in iOS development. I found a new contender, <a href="https://github.com/Figure53/F53OSC">F53OSC</a>, yesterday that seemed to be a complete implementation of OSC 1.0 and doesn’t require any XCode sub-projects (very annoying to setup when starting a new app).</p>

<p>Ideally for an OSC library, I should be able to drag a the folder of source files into my project and be ready to go.</p>

<p>After a bit of experimentation I updated the library to work with ARC and added a convenience method to make it easy to send OSC messages to different hosts. My forked library is called <a href="https://github.com/cpmpercussion/MetatoneOSC">MetatoneOSC</a>. The goal with this is to have the easiest to setup and use OSC library. The usage notes are below.</p>

<p>Super thanks to <a href="http://figure53.com">Figure 53</a> for putting the library together.</p>

<h2 id="usage">Usage</h2>

<p>Just add the source files to a project and import F53OSC.h.</p>

<h3 id="sending-messages">Sending messages</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>F53OSCClient *oscClient = [[F53OSCClient alloc] init];
F53OSCMessage *message =
[F53OSCMessage messageWithAddressPattern:@"/bla/bli/blo"
                               arguments:@[@1,@"A string argument!",@5.82]];
[oscClient sendPacket:message toHost:@"192.168.1.14" onPort:3000];'
</code></pre></div></div>

<h3 id="receiving-messages">Receiving messages</h3>

<p>Whatever object is receiving messages needs to be a</p>

<p><code class="language-plaintext highlighter-rouge">&lt;F53OSCPacketDestination data-preserve-html-node="true"&gt;</code> and implement the 
takeMessage method.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>F53OSCServer *oscServer = [[F53OSCServer alloc] init];
[oscServer setPort:3000];
[oscServer setDelegate:self];
[oscServer startListening];

- (void)takeMessage:(F53OSCMessage *)message {
    // This method is called whenever the oscServer receives a message.
    NSString *addressPattern = message.addressPattern;
    NSArray *arguments = message.arguments;
}
</code></pre></div></div>
:ET